#error
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: golden-error
spec:
  args:
  - name: service
  - name: namespace
  metrics:
  - name: golden-error
    initialDelay: 60s
    interval: 20s
    successCondition: len(result) == 0 || result[0] >= 0.9 
    
    provider:
      prometheus:
        address: http://10.152.183.211:9090 #http://prometheus.istio-system:9090
        query: 
          sum(irate(istio_requests_total{
            role ="canary",
            destination_service=~"{{args.service}}.{{args.namespace}}.svc.cluster.local",
            response_code!~"5.*"}[1m])
          )
          /
          sum(irate(istio_requests_total{
            role ="canary",
            destination_service=~"{{args.service}}.{{args.namespace}}.svc.cluster.local"}[1m])
          )
  
---
#TRAFFIC
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: golden-traffic
spec:
  args:
  - name: service
  - name: namespace
  metrics:
  - name: golden-traffic
    interval: 10s
    successCondition: len(result) == 0 || result[0] <=30
    #successCondition: result[0] <= 0.95
    #failureCondition: result[0] > 0.95
    #failureLimit: 3
    provider:
      prometheus:
        address:  http://10.152.183.211:9090 #http://prometheus.istio-system:9090
        query:
          sum(rate(istio_requests_total{
          role ="canary",
          destination_service=~"{{args.service}}.{{args.namespace}}.svc.cluster.local"}[1m]))

---
# LATENCY
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: golden-latency
spec:
  args:
  - name: service
  - name: namespace
  metrics:
  - name: golden-latency
    interval: 10s
    successCondition: len(result) == 0 || result[0] <= 1
   # failureCondition: 
   # failureLimit: 3
    provider:
      prometheus:
        address:  http://10.152.183.211:9090 #http://prometheus.istio-system:9090
        query:
          histogram_quantile(0.70, sum(rate(istio_request_duration_milliseconds_bucket{
          role ="canary",
          destination_service=~"{{args.service}}.{{args.namespace}}.svc.cluster.local"}[1m])) by (le,role))
          / 1000 
---
#saturation
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: golden-saturation
spec:
  args:
  - name: service
  - name: namespace
  metrics:
  - name: golden-saturation 
    interval: 10s
    successCondition: len(result) == 0 || result[0] <= 0.012
    #failureCondition: result[0] > 0.1
    #failureLimit: 3
    provider:
      prometheus:
        address: http://10.152.183.211:9090 #http://prometheus.istio-system:9090
        #"docker.io/sudda/httpfaultargo
        query:
          rate(container_cpu_usage_seconds_total{image="docker.io/sudda/latencyargo",
          namespace="{{args.namespace}}", pod=~"istio-rollout-.*"}[1m])
